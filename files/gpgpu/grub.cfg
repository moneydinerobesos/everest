insmod lvm
ls # to probe logical volumes

probe -u ($root) --set=BOOTPARTITION_UUID
set WALBRIX_BOOT=UUID=$BOOTPARTITION_UUID

search --file --set=partprofile --no-floppy /${BOOTPARTITION_UUID}
if [ $? == "0" ]; then
	probe -u ($partprofile) --set=PROFILEPARTITION_UUID
	set WALBRIX_PROFILE=UUID=$PROFILEPARTITION_UUID
fi

source /boot/grub/walbrix.cfg
source (loop)/walbrix.cfg

set LINUX_COMMON_ARGS="walbrix.boot=$WALBRIX_BOOT scandelay edd=off intel_iommu=off amd_iommu=off amdgpu.vm_fragment_size=9 amdgpu.ppfeaturemask=0xffffffff"
set LINUX_DISABLE_SPECTRE_WORKAROUND_ARGS="pti=off spectre_v2=off l1tf=off nospec_store_bypass_disable no_stf_barrier"
set LINUX_NOMODESET_ARGS="nomodeset i915.modeset=0 nouveau.modeset=0"

set LINUX_CONDITIONAL_NOMODESET_ARGS=""
set LINUX_PROFILE_ARGS=""
set LINUX_XEN_ARGS=""

if [ -n "$WALBRIX_GRUB_DEFAULT" ]; then
	set default=$WALBRIX_GRUB_DEFAULT
else
	set default=0
fi

if [ -n "$WALBRIX_GRUB_TIMEOUT" ]; then
	set timeout=$WALBRIX_GRUB_TIMEOUT
else
	set timeout=1
fi

if [ -n "$WALBRIX_PROFILE" ]; then
	set LINUX_PROFILE_ARGS="$LINUX_PROFILE_ARGS walbrix.profile=$WALBRIX_PROFILE"
fi

menuentry 'Walbrix GPGPU utilization edition' {
	echo 'Loading kernel...'
	linux (loop)/gpgpu/boot/kernel $LINUX_COMMON_ARGS $LINUX_DISABLE_SPECTRE_WORKAROUND_ARGS $LINUX_PROFILE_ARGS console=tty1
	echo 'Loading initramfs...'
	initrd (loop)/gpgpu/boot/initramfs
}

menuentry 'Rescue' {
	echo 'Loading kernel...'
	linux (loop)/gpgpu/boot/kernel $LINUX_COMMON_ARGS $LINUX_NOMODESET_ARGS softlevel=rescue
	echo 'Loading initramfs...'
	initrd (loop)/gpgpu/boot/initramfs
}

if [ "${grub_platform}" = "efi" ]; then
	if [ -f "/EFI/BOOT/memtest86.efi" ]; then
		menuentry 'MemTest86 (EFI)' {
			chainloader /EFI/BOOT/memtest86.efi
		}
	fi
fi
